#!/bin/sh

# Simple stateful installer generated by FirmwarePackager.
# States: init -> copy -> done. Failures trigger rollback using journal.

set -e

PKG_ID="@PKG_ID@"
PKG_NAME="@PKG_NAME@"
PKG_VERSION="@PKG_VERSION@"
FILES="@FILES@"

LOG_FILE="/var/log/${PKG_NAME}-install.log"
STATE_DIR="/opt/upgrade/state"
PKG_DIR="/opt/upgrade/packages"
STATE_FILE="${STATE_DIR}/${PKG_ID}.state"
JOURNAL="${STATE_DIR}/${PKG_ID}.journal"
PKG_ARCHIVE="${PKG_DIR}/${PKG_ID}.tar.gz"
STATE="init"

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [$STATE] $1" >> "$LOG_FILE"
}

write_state() {
    echo "$STATE" > "$STATE_FILE"
}

append_journal() {
    echo "$1" >> "$JOURNAL"
}

rollback() {
    log "rolling back"
    if [ -f "$JOURNAL" ]; then
        while read -r f; do
            rm -f "$f"
        done < "$JOURNAL"
    fi
}

cleanup() {
    log "cleanup"
}

mkdir -p "$STATE_DIR" "$PKG_DIR"

if [ "$1" = "--resume" ]; then
    [ -f "$STATE_FILE" ] && STATE=$(cat "$STATE_FILE")
else
    PKG_SRC="$1"
fi

trap 'STATE=rollback; write_state; log "error"; rollback; cleanup; exit 1' INT TERM HUP QUIT
trap 'cleanup' EXIT

while true; do
    case "$STATE" in
        init)
            log "starting install for ${PKG_NAME}-${PKG_VERSION} (${PKG_ID})"
            if [ -n "$PKG_SRC" ]; then
                cp "$PKG_SRC" "$PKG_ARCHIVE"
            fi
            STATE="copy"
            write_state
            ;;
        copy)
            for f in $FILES; do
                log "installing $f"
                # install step placeholder
                :
                append_journal "/$f"
            done
            STATE="done"
            write_state
            ;;
        rollback)
            rollback
            STATE="done"
            write_state
            ;;
        done)
            log "installation complete"
            rm -f "$STATE_FILE" "$JOURNAL"
            break
            ;;
        *)
            log "unknown state $STATE"
            exit 1
            ;;
    esac

done

exit 0
